
-- Definición del Paquete en HR
CREATE OR REPLACE PACKAGE HR.PKG_GESTION as

	PROCEDURE SP_DEPOSITO
	(
		P_CUENTA   IN VARCHAR2, 
		P_IMPORTE  IN NUMBER, 
		P_EMPLEADO IN VARCHAR2,
		P_ESTADO   OUT NOCOPY NUMBER,    -- 1: Proceso OK, -1: Error en el proceso
		P_MENSAJE  OUT NOCOPY VARCHAR2   -- Mensaje del proceso
	);
	
	PROCEDURE SP_RETIRO
	(
		P_CUENTA IN VARCHAR2, 
		P_IMPORTE IN NUMBER, 
		P_EMPLEADO IN VARCHAR2, 
		P_CLAVE IN VARCHAR2,
		P_ESTADO OUT NOCOPY NUMBER,     -- 1: Proceso OK, -1: Error en el proceso
		P_MENSAJE OUT NOCOPY VARCHAR2   -- Mensaje del proceso
	);	

END PKG_GESTION;
/

-- Implementación del Paquete en HR
CREATE OR REPLACE PACKAGE BODY HR.PKG_GESTION AS

	PROCEDURE SP_DEPOSITO
	(
		P_CUENTA   IN VARCHAR2, 
		P_IMPORTE  IN NUMBER, 
		P_EMPLEADO IN VARCHAR2,
		P_ESTADO   OUT NOCOPY NUMBER,    -- 1: Proceso OK, -1: Error en el proceso
		P_MENSAJE  OUT NOCOPY VARCHAR2   -- Mensaje del proceso
	)
	AS
		V_CONT      NUMBER(5,0);
		V_EXCEPTION EXCEPTION;
	BEGIN
		-- Valores por defecto
		P_ESTADO := 1;
		P_MENSAJE := 'Proceso ok.';
		-- Verificar cuenta
		SELECT COUNT(1) INTO V_CONT
		FROM HR.CUENTA
		WHERE CHR_CUENCODIGO = P_CUENTA
		AND VCH_CUENESTADO = 'ACTIVO';
		IF V_CONT = 0 THEN
			P_ESTADO := -1;
			P_MENSAJE := 'Cuenta no existe o no está activa.';
			RETURN;
		END IF;
		-- Actualizar la cuenta
		UPDATE HR.CUENTA
		SET DEC_CUENSALDO = DEC_CUENSALDO + P_IMPORTE,
				INT_CUENCONTMOV = INT_CUENCONTMOV + 1
		WHERE CHR_CUENCODIGO = P_CUENTA
		RETURNING INT_CUENCONTMOV INTO V_CONT;  
		-- Registrar Movimiento
		INSERT INTO HR.MOVIMIENTO(CHR_CUENCODIGO,INT_MOVINUMERO,DTT_MOVIFECHA,
			CHR_EMPLCODIGO,CHR_TIPOCODIGO,DEC_MOVIIMPORTE,CHR_CUENREFERENCIA)
		VALUES(P_CUENTA,V_CONT,SYSDATE,P_EMPLEADO,'003',P_IMPORTE,NULL);
		-- Confirmar la Tx
		COMMIT;
	EXCEPTION
		WHEN OTHERS THEN
			P_ESTADO := -1;
			P_MENSAJE := SQLERRM; -- capturar mensaje de error
			ROLLBACK; -- cancelar transacción
	END;
	
	
	PROCEDURE SP_RETIRO
	(
		P_CUENTA IN VARCHAR2, 
		P_IMPORTE IN NUMBER, 
		P_EMPLEADO IN VARCHAR2, 
		P_CLAVE IN VARCHAR2,
		P_ESTADO OUT NOCOPY NUMBER,     -- 1: Proceso OK, -1: Error en el proceso
		P_MENSAJE OUT NOCOPY VARCHAR2   -- Mensaje del proceso
	)
	AS
		V_SALDO NUMBER(12,2);
		V_CONT NUMBER(5,0);
		V_EXCEPTION EXCEPTION;
	BEGIN
		-- Valores por defecto
		P_ESTADO := 1;
		P_MENSAJE := 'Proceso ok.';
		-- Verificar cuenta
		SELECT COUNT(1) INTO V_CONT
		FROM HR.CUENTA
		WHERE CHR_CUENCODIGO = P_CUENTA
		AND CHR_CUENCLAVE = P_CLAVE
		AND VCH_CUENESTADO = 'ACTIVO';
		IF V_CONT = 0 THEN
			P_ESTADO := -1;
			P_MENSAJE := 'Datos incorrectos o cuenta no está activa.';
			RETURN;
		END IF;
		-- Datos de la cuenta
		SELECT DEC_CUENSALDO, INT_CUENCONTMOV 
		INTO   V_SALDO, V_CONT
		FROM   HR.CUENTA
		WHERE  CHR_CUENCODIGO = P_CUENTA 
		FOR UPDATE;
		-- Verificar saldo
		V_SALDO := V_SALDO - P_IMPORTE;
		IF V_SALDO < 0.0 THEN
			P_ESTADO := -1;
			P_MENSAJE := 'Saldo insuficiente.';
			RAISE V_EXCEPTION;
		END IF;
		-- Actualiza la cuenta
		V_CONT := V_CONT + 1;
		UPDATE HR.CUENTA
			SET DEC_CUENSALDO = V_SALDO, INT_CUENCONTMOV = V_CONT
			WHERE CHR_CUENCODIGO = P_CUENTA;
		-- Registrar Movimiento
		INSERT INTO HR.MOVIMIENTO(CHR_CUENCODIGO,INT_MOVINUMERO,DTT_MOVIFECHA,
			CHR_EMPLCODIGO,CHR_TIPOCODIGO,DEC_MOVIIMPORTE,CHR_CUENREFERENCIA)
			VALUES(P_CUENTA,V_CONT,SYSDATE,P_EMPLEADO,'004',P_IMPORTE,NULL);
		-- Confirmar la Tx
		COMMIT;
	EXCEPTION
		WHEN V_EXCEPTION THEN
			ROLLBACK; -- cancelar transacción
		WHEN OTHERS THEN
			P_ESTADO := -1;
			P_MENSAJE := SQLERRM; -- capturar mensaje de error
			ROLLBACK; -- cancelar transacción
	END;	

END PKG_GESTION;
/

