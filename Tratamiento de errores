--Manejo de exepciones predefinidas
DECLARE
  v_divisor NUMBER := 0; -- Declaración y asignación de la variable v_divisor
  v_resultado NUMBER; -- Declaración de la variable v_resultado
BEGIN
  v_resultado := 10 / v_divisor; -- Intentar dividir por cero
EXCEPTION
  WHEN ZERO_DIVIDE THEN -- Capturar la excepción de división por cero
    DBMS_OUTPUT.PUT_LINE('Error: División por cero.'); -- Imprimir mensaje de error
END;
/

-- Manejo de excepciones definidas por el usuario
DECLARE
  e_salario_bajo EXCEPTION; -- Declaración de una excepción definida por el usuario
  v_salario NUMBER := 1000; -- Declaración y asignación de la variable v_salario
BEGIN
  IF v_salario < 2000 THEN -- Si el salario es menor a 2000
    RAISE e_salario_bajo; -- Generar la excepción e_salario_bajo
  END IF;
EXCEPTION
  WHEN e_salario_bajo THEN -- Capturar la excepción e_salario_bajo
    DBMS_OUTPUT.PUT_LINE('Error: Salario demasiado bajo.'); -- Imprimir mensaje de error
END;
/

--Uso de SQLERRM Y SQLCODE
DECLARE
  v_divisor NUMBER := 0; -- Declaración y asignación de la variable v_divisor
  v_resultado NUMBER; -- Declaración de la variable v_resultado
BEGIN
  v_resultado := 10 / v_divisor; -- Intentar dividir por cero
EXCEPTION
  WHEN OTHERS THEN -- Capturar cualquier otra excepción no específica
    DBMS_OUTPUT.PUT_LINE('Código de error: ' || SQLCODE); -- Imprimir el código de error
    DBMS_OUTPUT.PUT_LINE('Mensaje de error: ' || SQLERRM); -- Imprimir el mensaje de error
END;
/

-- Propagacion de excepciones
DECLARE
  PROCEDURE sub_procedimiento IS
  BEGIN
    RAISE NO_DATA_FOUND; -- Generar la excepción NO_DATA_FOUND
  END;
BEGIN
  sub_procedimiento; -- Llamar al subprocedimiento
EXCEPTION
  WHEN NO_DATA_FOUND THEN -- Capturar la excepción NO_DATA_FOUND
    DBMS_OUTPUT.PUT_LINE('Error: No se encontraron datos.'); -- Imprimir mensaje de error
END;
/
-- Raise
DECLARE
  v_numero NUMBER := 0;
BEGIN
  -- Intentar dividir por cero
  IF v_numero = 0 THEN
    RAISE ZERO_DIVIDE; -- Lanza la excepción predefinida ZERO_DIVIDE
  END IF;
  
EXCEPTION
  WHEN ZERO_DIVIDE THEN
    DBMS_OUTPUT.PUT_LINE('Error: División por cero.'); -- Manejo de la excepción ZERO_DIVIDE
  WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20001, 'Ocurrió un error: ' || SQLERRM); -- Lanza una excepción personalizada
END;
/

--Generar mensaje de error
DECLARE
  v_numero NUMBER := 0;
BEGIN
  IF v_numero = 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Intento de división por cero.'); -- Generar una excepción personalizada
  END IF;
EXCEPTION
  WHEN ZERO_DIVIDE THEN
    DBMS_OUTPUT.PUT_LINE('Error: División por cero.'); -- Manejar la excepción predefinida ZERO_DIVIDE
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('Error: No se encontró ningún dato.'); -- Manejar la excepción predefinida NO_DATA_FOUND
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Ocurrió un error: ' || SQLERRM); -- Manejar cualquier otra excepción
END;
/
